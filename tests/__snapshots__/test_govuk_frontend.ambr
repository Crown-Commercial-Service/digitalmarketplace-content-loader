# name: TestCheckboxes.test_from_question
  <class 'dict'> {
    'idPrefix': 'input-oneAndAnother',
    'items': <class 'list'> [
      <class 'dict'> {
        'text': 'One',
        'value': 'one',
      },
      <class 'dict'> {
        'text': 'Another',
        'value': 'another',
      },
    ],
    'name': 'oneAndAnother',
  }
---
# name: TestCheckboxes.test_from_question_with_data
  <class 'dict'> {
    'fieldset': <class 'dict'> {
      'legend': <class 'dict'> {
        'classes': 'govuk-fieldset__legend--l',
        'isPageHeading': True,
        'text': 'Choose one and/or another',
      },
    },
    'macro_name': 'govukCheckboxes',
    'params': <class 'dict'> {
      'idPrefix': 'input-oneAndAnother',
      'items': <class 'list'> [
        <class 'dict'> {
          'checked': True,
          'text': 'One',
          'value': 'one',
        },
        <class 'dict'> {
          'checked': True,
          'text': 'Another',
          'value': 'another',
        },
      ],
      'name': 'oneAndAnother',
    },
  }
---
# name: TestCheckboxes.test_from_question_with_errors
  <class 'dict'> {
    'fieldset': <class 'dict'> {
      'legend': <class 'dict'> {
        'classes': 'govuk-fieldset__legend--l',
        'isPageHeading': True,
        'text': 'Choose one and/or another',
      },
    },
    'macro_name': 'govukCheckboxes',
    'params': <class 'dict'> {
      'errorMessage': <class 'dict'> {
        'text': 'Select one or another',
      },
      'idPrefix': 'input-oneAndAnother',
      'items': <class 'list'> [
        <class 'dict'> {
          'text': 'One',
          'value': 'one',
        },
        <class 'dict'> {
          'text': 'Another',
          'value': 'another',
        },
      ],
      'name': 'oneAndAnother',
    },
  }
---
# name: TestCheckboxes.test_from_question_with_is_page_heading_false
  <class 'dict'> {
    'legend': <class 'dict'> {
      'classes': 'govuk-fieldset__legend--l',
      'isPageHeading': True,
      'text': 'Choose one and/or another',
    },
  }
---
# name: TestCheckboxes.test_govuk_checkboxes
  <class 'dict'> {
    'idPrefix': 'input-oneAndAnother',
    'items': <class 'list'> [
      <class 'dict'> {
        'text': 'One',
        'value': 'one',
      },
      <class 'dict'> {
        'text': 'Another',
        'value': 'another',
      },
    ],
    'name': 'oneAndAnother',
  }
---
# name: TestDateInput.test_from_question
  <class 'dict'> {
    'id': 'input-startDate',
    'items': <class 'list'> [
      <class 'dict'> {
        'classes': 'app-text-input--height-compatible govuk-input--width-2',
        'name': 'day',
      },
      <class 'dict'> {
        'classes': 'app-text-input--height-compatible govuk-input--width-2',
        'name': 'month',
      },
      <class 'dict'> {
        'classes': 'app-text-input--height-compatible govuk-input--width-4',
        'name': 'year',
      },
    ],
    'name': 'startDate',
    'namePrefix': 'startDate',
  }
---
# name: TestDateInput.test_from_question_with_data
  <class 'dict'> {
    'fieldset': <class 'dict'> {
      'legend': <class 'dict'> {
        'classes': 'govuk-fieldset__legend--l',
        'isPageHeading': True,
        'text': 'What is the latest start date?',
      },
    },
    'macro_name': 'govukDateInput',
    'params': <class 'dict'> {
      'id': 'input-startDate',
      'items': <class 'list'> [
        <class 'dict'> {
          'classes': 'app-text-input--height-compatible govuk-input--width-2',
          'name': 'day',
          'value': 1,
        },
        <class 'dict'> {
          'classes': 'app-text-input--height-compatible govuk-input--width-2',
          'name': 'month',
          'value': 12,
        },
        <class 'dict'> {
          'classes': 'app-text-input--height-compatible govuk-input--width-4',
          'name': 'year',
          'value': 2020,
        },
      ],
      'name': 'startDate',
      'namePrefix': 'startDate',
    },
  }
---
# name: TestDateInput.test_from_question_with_errors
  <class 'dict'> {
    'fieldset': <class 'dict'> {
      'legend': <class 'dict'> {
        'classes': 'govuk-fieldset__legend--l',
        'isPageHeading': True,
        'text': 'What is the latest start date?',
      },
    },
    'macro_name': 'govukDateInput',
    'params': <class 'dict'> {
      'errorMessage': <class 'dict'> {
        'text': 'Enter a start date',
      },
      'id': 'input-startDate',
      'items': <class 'list'> [
        <class 'dict'> {
          'classes': 'app-text-input--height-compatible govuk-input--width-2 govuk-input--error',
          'name': 'day',
        },
        <class 'dict'> {
          'classes': 'app-text-input--height-compatible govuk-input--width-2 govuk-input--error',
          'name': 'month',
        },
        <class 'dict'> {
          'classes': 'app-text-input--height-compatible govuk-input--width-4 govuk-input--error',
          'name': 'year',
        },
      ],
      'name': 'startDate',
      'namePrefix': 'startDate',
    },
  }
---
# name: TestDateInput.test_from_question_with_is_page_heading_false
  <class 'dict'> {
    'legend': <class 'dict'> {
      'classes': 'govuk-fieldset__legend--l',
      'isPageHeading': True,
      'text': 'What is the latest start date?',
    },
  }
---
# name: TestDateInput.test_govuk_date_input
  <class 'dict'> {
    'id': 'input-startDate',
    'items': <class 'list'> [
      <class 'dict'> {
        'classes': 'app-text-input--height-compatible govuk-input--width-2',
        'name': 'day',
      },
      <class 'dict'> {
        'classes': 'app-text-input--height-compatible govuk-input--width-2',
        'name': 'month',
      },
      <class 'dict'> {
        'classes': 'app-text-input--height-compatible govuk-input--width-4',
        'name': 'year',
      },
    ],
    'name': 'startDate',
    'namePrefix': 'startDate',
  }
---
# name: TestDmListInput.test_dm_list_input
  <class 'dict'> {
    'addButtonName': 'item',
    'fieldset': <class 'dict'> {
      'legend': <class 'dict'> {
        'classes': 'govuk-fieldset__legend--l',
        'isPageHeading': True,
        'text': 'Cultural fit criteria',
      },
    },
    'hint': <class 'dict'> {
      'text': 'Enter at least one criteria',
    },
    'id': 'input-culturalFitCriteria',
    'itemLabelPrefix': 'Cultural fit criteria',
    'items': <class 'list'> [
    ],
    'maxItems': 5,
    'name': 'culturalFitCriteria',
    'question_advice': '<p class="govuk-body">Cultural fit is about how well you and the specialist work together</p>',
  }
---
# name: TestDmListInput.test_from_question
  <class 'dict'> {
    'addButtonName': 'item',
    'fieldset': <class 'dict'> {
      'legend': <class 'dict'> {
        'classes': 'govuk-fieldset__legend--l',
        'isPageHeading': True,
        'text': 'Cultural fit criteria',
      },
    },
    'hint': <class 'dict'> {
      'text': 'Enter at least one criteria',
    },
    'id': 'input-culturalFitCriteria',
    'itemLabelPrefix': 'Cultural fit criteria',
    'items': <class 'list'> [
    ],
    'maxItems': 5,
    'name': 'culturalFitCriteria',
    'question_advice': '<p class="govuk-body">Cultural fit is about how well you and the specialist work together</p>',
  }
---
# name: TestDmListInput.test_from_question_with_is_page_heading_false
  <class 'dict'> {
    'addButtonName': 'item',
    'fieldset': <class 'dict'> {
      'legend': <class 'dict'> {
        'classes': 'govuk-fieldset__legend--m',
        'text': 'Cultural fit criteria',
      },
    },
    'hint': <class 'dict'> {
      'text': 'Enter at least one criteria',
    },
    'id': 'input-culturalFitCriteria',
    'itemLabelPrefix': 'Cultural fit criteria',
    'items': <class 'list'> [
    ],
    'maxItems': 5,
    'name': 'culturalFitCriteria',
    'question_advice': '<p class="govuk-body">Cultural fit is about how well you and the specialist work together</p>',
  }
---
# name: TestDmListInput.test_with_data
  <class 'dict'> {
    'macro_name': 'dmListInput',
    'params': <class 'dict'> {
      'addButtonName': 'item',
      'fieldset': <class 'dict'> {
        'legend': <class 'dict'> {
          'classes': 'govuk-fieldset__legend--l',
          'isPageHeading': True,
          'text': 'Cultural fit criteria',
        },
      },
      'hint': <class 'dict'> {
        'text': 'Enter at least one criteria',
      },
      'id': 'input-culturalFitCriteria',
      'itemLabelPrefix': 'Cultural fit criteria',
      'items': <class 'list'> [
        <class 'dict'> {
          'value': 'Must know how to make tea',
        },
        <class 'dict'> {
          'value': 'Must believe unicorns',
        },
      ],
      'maxItems': 5,
      'name': 'culturalFitCriteria',
      'question_advice': '<p class="govuk-body">Cultural fit is about how well you and the specialist work together</p>',
      'value': <class 'list'> [
        'Must know how to make tea',
        'Must believe unicorns',
      ],
    },
  }
---
# name: TestDmListInput.test_with_errors
  <class 'dict'> {
    'macro_name': 'dmListInput',
    'params': <class 'dict'> {
      'addButtonName': 'item',
      'errorMessage': <class 'dict'> {
        'text': 'Enter at least one criterion.',
      },
      'fieldset': <class 'dict'> {
        'legend': <class 'dict'> {
          'classes': 'govuk-fieldset__legend--l',
          'isPageHeading': True,
          'text': 'Cultural fit criteria',
        },
      },
      'hint': <class 'dict'> {
        'text': 'Enter at least one criteria',
      },
      'id': 'input-culturalFitCriteria',
      'itemLabelPrefix': 'Cultural fit criteria',
      'items': <class 'list'> [
      ],
      'maxItems': 5,
      'name': 'culturalFitCriteria',
      'question_advice': '<p class="govuk-body">Cultural fit is about how well you and the specialist work together</p>',
    },
  }
---
# name: TestDmPricingInput.test_dm_pricing_input_with_price_field
  <class 'dict'> {
    'label': <class 'dict'> {
      'classes': 'govuk-label--l',
      'for': 'input-cost',
      'isPageHeading': True,
      'text': "What's the cost?",
    },
    'macro_name': 'govukInput',
    'params': <class 'dict'> {
      'classes': 'app-text-input--height-compatible govuk-input--width-5',
      'id': 'input-cost',
      'name': 'cost',
      'prefix': <class 'dict'> {
        'text': '£',
      },
      'spellcheck': False,
    },
  }
---
# name: TestDmPricingInput.test_from_question[price_question]
  <class 'dict'> {
    'label': <class 'dict'> {
      'classes': 'govuk-label--l',
      'for': 'input-cost',
      'isPageHeading': True,
      'text': "What's the cost?",
    },
    'macro_name': 'govukInput',
    'params': <class 'dict'> {
      'classes': 'app-text-input--height-compatible govuk-input--width-5',
      'id': 'input-cost',
      'name': 'cost',
      'prefix': <class 'dict'> {
        'text': '£',
      },
      'spellcheck': False,
    },
  }
---
# name: TestDmPricingInput.test_from_question_with_data[price_question]
  <class 'dict'> {
    'label': <class 'dict'> {
      'classes': 'govuk-label--l',
      'for': 'input-cost',
      'isPageHeading': True,
      'text': "What's the cost?",
    },
    'macro_name': 'govukInput',
    'params': <class 'dict'> {
      'classes': 'app-text-input--height-compatible govuk-input--width-5',
      'id': 'input-cost',
      'name': 'cost',
      'prefix': <class 'dict'> {
        'text': '£',
      },
      'spellcheck': False,
      'value': '1.00',
    },
  }
---
# name: TestDmPricingInput.test_from_question_with_errors[price_question]
  <class 'dict'> {
    'label': <class 'dict'> {
      'classes': 'govuk-label--l',
      'for': 'input-cost',
      'isPageHeading': True,
      'text': "What's the cost?",
    },
    'macro_name': 'govukInput',
    'params': <class 'dict'> {
      'classes': 'app-text-input--height-compatible govuk-input--width-5',
      'errorMessage': <class 'dict'> {
        'text': 'Enter a cost.',
      },
      'id': 'input-cost',
      'name': 'cost',
      'prefix': <class 'dict'> {
        'text': '£',
      },
      'spellcheck': False,
    },
  }
---
# name: TestGovukCharacterCount.test_from_question
  <class 'dict'> {
    'hint': <class 'dict'> {
      'text': 'Enter at least one word, and no more than 100',
    },
    'id': 'input-description',
    'maxwords': 100,
    'name': 'description',
    'spellcheck': True,
  }
---
# name: TestGovukCharacterCount.test_govuk_character_count
  <class 'dict'> {
    'hint': <class 'dict'> {
      'text': 'Enter at least one word, and no more than 100',
    },
    'id': 'input-description',
    'maxwords': 100,
    'name': 'description',
    'spellcheck': True,
  }
---
# name: TestGovukCharacterCount.test_with_data
  <class 'dict'> {
    'label': <class 'dict'> {
      'classes': 'govuk-label--l',
      'for': 'input-description',
      'isPageHeading': True,
      'text': "Describe the specialist's role",
    },
    'macro_name': 'govukCharacterCount',
    'params': <class 'dict'> {
      'hint': <class 'dict'> {
        'text': 'Enter at least one word, and no more than 100',
      },
      'id': 'input-description',
      'maxwords': 100,
      'name': 'description',
      'spellcheck': True,
      'value': 'The specialist must know how to make tea and work well with unicorns.',
    },
  }
---
# name: TestGovukCharacterCount.test_with_errors
  <class 'dict'> {
    'label': <class 'dict'> {
      'classes': 'govuk-label--l',
      'for': 'input-description',
      'isPageHeading': True,
      'text': "Describe the specialist's role",
    },
    'macro_name': 'govukCharacterCount',
    'params': <class 'dict'> {
      'errorMessage': <class 'dict'> {
        'text': "Enter a description of the specialist's role.",
      },
      'hint': <class 'dict'> {
        'text': 'Enter at least one word, and no more than 100',
      },
      'id': 'input-description',
      'maxwords': 100,
      'name': 'description',
      'spellcheck': True,
    },
  }
---
# name: TestNumberInput.test_from_question
  <class 'dict'> {
    'classes': 'app-text-input--height-compatible govuk-input--width-5',
    'id': 'input-howMany',
    'name': 'howMany',
    'spellcheck': False,
  }
---
# name: TestNumberInput.test_from_question_with_data
  <class 'dict'> {
    'label': <class 'dict'> {
      'classes': 'govuk-label--l',
      'for': 'input-howMany',
      'isPageHeading': True,
      'text': 'How many?',
    },
    'macro_name': 'govukInput',
    'params': <class 'dict'> {
      'classes': 'app-text-input--height-compatible govuk-input--width-5',
      'id': 'input-howMany',
      'name': 'howMany',
      'spellcheck': False,
      'value': '10',
    },
  }
---
# name: TestNumberInput.test_from_question_with_errors
  <class 'dict'> {
    'label': <class 'dict'> {
      'classes': 'govuk-label--l',
      'for': 'input-howMany',
      'isPageHeading': True,
      'text': 'How many?',
    },
    'macro_name': 'govukInput',
    'params': <class 'dict'> {
      'classes': 'app-text-input--height-compatible govuk-input--width-5',
      'errorMessage': <class 'dict'> {
        'text': 'Enter how many',
      },
      'id': 'input-howMany',
      'name': 'howMany',
      'spellcheck': False,
    },
  }
---
# name: TestNumberInput.test_govuk_input
  <class 'dict'> {
    'classes': 'app-text-input--height-compatible govuk-input--width-5',
    'id': 'input-howMany',
    'name': 'howMany',
    'spellcheck': False,
  }
---
# name: TestRadios.test_from_question
  <class 'dict'> {
    'idPrefix': 'input-yesOrNo',
    'items': <class 'list'> [
      <class 'dict'> {
        'text': 'Yes',
        'value': 'yes',
      },
      <class 'dict'> {
        'text': 'No',
        'value': 'no',
      },
    ],
    'name': 'yesOrNo',
  }
---
# name: TestRadios.test_from_question_with_data
  <class 'dict'> {
    'fieldset': <class 'dict'> {
      'legend': <class 'dict'> {
        'classes': 'govuk-fieldset__legend--l',
        'isPageHeading': True,
        'text': 'Yes or no?',
      },
    },
    'macro_name': 'govukRadios',
    'params': <class 'dict'> {
      'idPrefix': 'input-yesOrNo',
      'items': <class 'list'> [
        <class 'dict'> {
          'checked': True,
          'text': 'Yes',
          'value': 'yes',
        },
        <class 'dict'> {
          'text': 'No',
          'value': 'no',
        },
      ],
      'name': 'yesOrNo',
    },
  }
---
# name: TestRadios.test_from_question_with_errors
  <class 'dict'> {
    'fieldset': <class 'dict'> {
      'legend': <class 'dict'> {
        'classes': 'govuk-fieldset__legend--l',
        'isPageHeading': True,
        'text': 'Yes or no?',
      },
    },
    'macro_name': 'govukRadios',
    'params': <class 'dict'> {
      'errorMessage': <class 'dict'> {
        'text': 'Select yes or no,',
      },
      'idPrefix': 'input-yesOrNo',
      'items': <class 'list'> [
        <class 'dict'> {
          'text': 'Yes',
          'value': 'yes',
        },
        <class 'dict'> {
          'text': 'No',
          'value': 'no',
        },
      ],
      'name': 'yesOrNo',
    },
  }
---
# name: TestRadios.test_from_question_with_is_page_heading_false
  <class 'dict'> {
    'legend': <class 'dict'> {
      'classes': 'govuk-fieldset__legend--l',
      'isPageHeading': True,
      'text': 'Yes or no?',
    },
  }
---
# name: TestRadios.test_govuk_radios
  <class 'dict'> {
    'idPrefix': 'input-yesOrNo',
    'items': <class 'list'> [
      <class 'dict'> {
        'text': 'Yes',
        'value': 'yes',
      },
      <class 'dict'> {
        'text': 'No',
        'value': 'no',
      },
    ],
    'name': 'yesOrNo',
  }
---
# name: TestTextInput.test_from_question
  <class 'dict'> {
    'classes': 'app-text-input--height-compatible',
    'hint': <class 'dict'> {
      'text': '100 characters maximum',
    },
    'id': 'input-title',
    'name': 'title',
  }
---
# name: TestTextInput.test_from_question_with_is_page_heading_false
  <class 'dict'> {
    'classes': 'app-text-input--height-compatible',
    'hint': <class 'dict'> {
      'text': '100 characters maximum',
    },
    'id': 'input-title',
    'name': 'title',
  }
---
# name: TestTextInput.test_govuk_input
  <class 'dict'> {
    'classes': 'app-text-input--height-compatible',
    'hint': <class 'dict'> {
      'text': '100 characters maximum',
    },
    'id': 'input-title',
    'name': 'title',
  }
---
# name: TestTextInput.test_with_data
  <class 'dict'> {
    'label': <class 'dict'> {
      'classes': 'govuk-label--l',
      'for': 'input-title',
      'isPageHeading': True,
      'text': 'What you want to call your requirements',
    },
    'macro_name': 'govukInput',
    'params': <class 'dict'> {
      'classes': 'app-text-input--height-compatible',
      'hint': <class 'dict'> {
        'text': '100 characters maximum',
      },
      'id': 'input-title',
      'name': 'title',
      'value': 'Find an individual specialist',
    },
  }
---
# name: TestTextInput.test_with_errors
  <class 'dict'> {
    'label': <class 'dict'> {
      'classes': 'govuk-label--l',
      'for': 'input-title',
      'isPageHeading': True,
      'text': 'What you want to call your requirements',
    },
    'macro_name': 'govukInput',
    'params': <class 'dict'> {
      'classes': 'app-text-input--height-compatible',
      'errorMessage': <class 'dict'> {
        'text': 'Enter a title.',
      },
      'hint': <class 'dict'> {
        'text': '100 characters maximum',
      },
      'id': 'input-title',
      'name': 'title',
    },
  }
---
